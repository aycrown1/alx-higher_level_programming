This module defines a matrix division function ``matrix_divided(matrix, div)``.

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
... [3, 6, 9],
... [12, 15, 18]
... ]
>>> print(matrix_divided(matrix, 3))
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]
>>> matrix = [
... [1.1, -2.2, 3.3],
... [-4.4, 5.5, -6.6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.37, -0.73, 1.1], [-1.47, 1.83, -2.2]]
>>> print(matrix_divided(matrix, 2))
[[0.55, -1.1, 1.65], [-2.2, 2.75, -3.3]]
>>> print(matrix_divided(matrix, 1))
[[1.1, -2.2, 3.3], [-4.4, 5.5, -6.6]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero
>>> print(matrix_divided(matrix, None))
Traceback (most recent call last):
  ...
TypeError: div must be a number
>>> print(matrix_divided(matrix, True))
[[1.1, -2.2, 3.3], [-4.4, 5.5, -6.6]]
>>> print(matrix_divided(matrix, 2*2))
[[0.28, -0.55, 0.82], [-1.1, 1.38, -1.65]]
>>> print(matrix_divided(matrix, 'hello'))
Traceback (most recent call last):
  ...
TypeError: div must be a number
>>> matrix = [[],[]]
>>> print(matrix_divided(matrix, 2))
[[], []]
>>> matrix = ()
>>> print(matrix_divided())
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
